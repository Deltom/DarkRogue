package Battle;

public class Motion //Родительский класс движений
{
    String[] resultOfMotion = {"Fail", "Success", "Critical Fail", "Critical Success"};

    String[] tagsPlayerOne;
    String[] tagsPlayerTwo;

    public String outputResult(int resultNumber)    //Метод отправки результатов действий в класс результатов
    {
        return resultOfMotion[resultNumber];
    }

    //Получение тегов обоих игроков для определения доступных действий
    public void getTagsPlayerOne(String[] tagsPlayerOne) { this.tagsPlayerOne = tagsPlayerOne; }

    public void getTagsPlayerTwo(String[] tagsPlayerTwo) { this.tagsPlayerTwo = tagsPlayerTwo; }

    public String[] setTagsPlayerOne() { return tagsPlayerOne; }
    public String[] setTagsPlayerTwo() { return tagsPlayerTwo; }

   /* public void movesMethod()   //метод движения
    {
        String[] tagsP1 = {"stand"};
    }*/
}

class LowMotion extends Motion //Класс движений с низкой инициативы
{

}

class HighMotion extends Motion //Класс движений с высокой инициативы
{

}

class SameMotion extends Motion //Класс движений с одинаковой инициативой
{
    public void Attack()    //Атака
    {
        String[] tagsP1 = {"close", "stand", "sword"};

    }
}
/*
Кроме методов самих движений, что нужно классу:
    метод определения нужных движений
    результат действия(успешно, неуспешно) В будущем будет(критически успешно, критически неудачно) +
    метод отправки результата действия в класс результатов.                                         +
    метод получения данных игроков(положение, и другая инфа для дадатия тегов)                      +
    метод отправки данных в классы результатов
    метод приближения и отдаления(чуток позже)
    метод смены позы(чуток позже)
    Отправка изменённых тегов игроку                                                                +
    метод составления и вывод возможных к применению действий
        Доп для низкого:
            метод получения и обработки действий высокой инициативы

        Доп для высокого:
            метод отправки действий для низкой инициативы
Через один класс родителя да

Реализация движений.
Будет несколько классов движенений. Низкая, одинаковая и высокая(инициатива)
В классе движений будут методы всех движений(соответсвующей иниц.)
Метод содержит в себе теги(теги нескольких видов: от вас и врага. Типа попытаться прикончить лежачего,
пока противник стоит от тебя в 10 метрах идея так себе)
Каждый класс будет содержать переменные результатов движений чтоб можно было сравнивать
Классы низкой и высокой взаимосвязанны(типа у одного игрока низкая, а у другого высокая), поэтому
Переменные и теги, будут чутка разница

 */