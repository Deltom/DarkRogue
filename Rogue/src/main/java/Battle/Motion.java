package Battle;

public class Motion //Родительский класс движений
{
    String[] resultOfMotion = {"Fail", "Success", "Critical Fail", "Critical Success"};


   /* public String outputResult()
    {

    }*/

}

class LowMotion extends Motion //Класс движений с низкой инициативы
{

}

class HighMotion extends Motion //Класс движений с высокой инициативы
{

}

class SameMotion extends Motion //Класс движений с одинаковой инициативой
{

}
/*
Кроме методов самих движений, что нужно классу:
    результат действия(успешно, неуспешно) В будущем будет(критичесчи успешно, критически неудачно)
    метод отправки результата действия в класс результатов
    метод получения данных игроков(положение, и другая инфа для дадатия тегов)
    метод отправки в классы результатов
    метод приблежения и отдаления(чуток позже)
    метод смены позы(чуток позже)
        Доп для низкого:
            метод получения и обработки действий высокой инициативы

        Доп для высокого:
            метод отправки действий для низкой инициативы
Через один класс родителя да

Реализация движений.
Будет несколько классов движенений. Низкая, одинаковая и высокая(инициатива)
В классе движений будут методы всех движений(соответсвующей иниц.)
Метод содержит в себе теги(теги нескольких видов: от вас и врага. Типа попытаться прикончить лежачего,
пока противник стоит от тебя в 10 метрах идея так себе)
Каждый класс будет содержать переменные результатов движений чтоб можно было сравнивать
Классы низкой и высокой взаимосвязанны(типа у одного игрока низкая, а у другого высокая), поэтому
Переменные и теги, будут чутка разница

 */